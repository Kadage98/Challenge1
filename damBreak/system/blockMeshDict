/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2012                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

scale 0.001;

cvx 0.0;
cvy 0.0;
cvz 0.0;
height 30.0;
ri 1.0;
ro 5.0;

x 8.0;
y 8.0;
z 75.0;

h #calc "$height+$cvz";

pxi #calc "$cvx+$ri";
nxi #calc "$cvx-$ri";
pyi #calc "$cvy+$ri";
nyi #calc "$cvy-$ri";

pxo #calc "$cvx+$ro";
nxo #calc "$cvx-$ro";
pyo #calc "$cvy+$ro";
nyo #calc "$cvy-$ro";

ci1 #calc "$cvx + ($ri*cos(45.0))";
si1 #calc "$cvx + ($ri*sin(45.0))";
ci2 #calc "$cvx + ($ri*cos(135.0))";
si2 #calc "$cvx + ($ri*sin(135.0))";
ci3 #calc "$cvx + ($ri*cos(225.0))";
si3 #calc "$cvx + ($ri*sin(225.0))";
ci4 #calc "$cvx + ($ri*cos(315.0))";
si4 #calc "$cvx + ($ri*sin(315.0))";

co1 #calc "$cvx + ($ro*cos(45.0))";
so1 #calc "$cvx + ($ro*sin(45.0))";
co2 #calc "$cvx + ($ro*cos(135.0))";
so2 #calc "$cvx + ($ro*sin(135.0))";
co3 #calc "$cvx + ($ro*cos(225.0))";
so3 #calc "$cvx + ($ro*sin(225.0))";
co4 #calc "$cvx + ($ro*cos(315.0))";
so4 #calc "$cvx + ($ro*sin(315.0))";

vertices
(
 ($pxi $cvy $cvz)
 ($cvx $pyi $cvz)
 ($nxi $cvy $cvz)
 ($cvx $nyi $cvz)
 
 ($pxi $cvy $h)
 ($cvx $pyi $h)
 ($nxi $cvy $h)
 ($cvx $nyi $h)
 
 ($pxo $cvy $cvz)
 ($cvx $pyo $cvz)
 ($nxo $cvy $cvz)
 ($cvx $nyo $cvz)
 
 ($pxo $cvy $h)
 ($cvx $pyo $h)
 ($nxo $cvy $h)
 ($cvx $nyo $h)
);

blocks
(
 hex (0 1 2 3 4 5 6 7) ($x $y $z) simpleGrading (1 1 1)      //block 1
 hex (0 8 9 1 4 12 13 5) ($x $y $z) simpleGrading (1 1 1)    //block 2
 hex (1 9 10 2 5 13 14 6) ($x $y $z) simpleGrading (1 1 1)   //block 3
 hex (2 10 11 3 6 14 15 7) ($x $y $z) simpleGrading (1 1 1)  //block 4
 hex (3 11 8 0 7 15 12 4) ($x $y $z) simpleGrading (1 1 1)   //block 5
);

edges
(
arc 0 1 ($ci1 $si1 $cvz)
arc 1 2 ($ci2 $si2 $cvz)
arc 2 3 ($ci3 $si3 $cvz)
arc 3 0 ($ci4 $si4 $cvz)

arc 4 5 ($ci1 $si1 $h)
arc 5 6 ($ci2 $si2 $h)
arc 6 7 ($ci3 $si3 $h)
arc 7 4 ($ci4 $si4 $h)

arc 8 9 ($co1 $so1 $cvz)
arc 9 10 ($co2 $so2 $cvz)
arc 10 11 ($co3 $so3 $cvz)
arc 11 8 ($co4 $so $cvz)

arc 12 13 ($co1 $so1 $h)
arc 13 14 ($co2 $so2 $h)
arc 14 15 ($co3 $so3 $h)
arc 15 12 ($co4 $so4 $h)
);

defaultPatch
{
 name solidWalls;
 type wall;
}

boundary
(
 atmosphere
 {
    type patch;
	faces
	(
	 (4 5 6 7)
	 (4 12 13 5)
	 (5 13 14 6)
	 (6 14 15 7)
	 (7 15 12 4)
	);
 }
);

// ************************************************************************* //
